{"version":3,"sources":["../src/aum.js"],"names":["AUM_JWT","getTraceId","base64Encode","Buffer","process","env","IRIS_AUM_APP_KEY","IRIS_AUM_APP_SECRET","toString","getAuthorizationHeader","poisonCache","__","getAumJwt","response","axios","post","IRIS_AUM_SERVER_URL","headers","Authorization","data","Token","err"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA,IAAIA,OAAJ;;AAEO,MAAMC,kCAAa,MAAM;AAC5B,WAAQ,WAAU,eAAO,EAAzB;AACH,CAFM;;AAIA,MAAMC,sCAAe,MAAM;AAC9B,WAAO,IAAIC,MAAJ,CAAY,GAAEC,QAAQC,GAAR,CAAYC,gBAAiB,IAAGF,QAAQC,GAAR,CAAYE,mBAAoB,EAA9E,EAAiFC,QAAjF,CAA0F,QAA1F,CAAP;AACH,CAFM;;AAKA,MAAMC,0DAAyB,OAAOC,cAAc,KAArB,KAA+B;AACjE,QAAIA,eAAe,CAACV,OAApB,EACIA,UAAU,MAAMW,GAAGC,SAAH,EAAhB;;AAEJ,WAAQ,UAASZ,OAAQ,EAAzB;AACH,CALM;;AAOA,MAAMY,gCAAY,YAAY;AACjC,QAAI;AACA,cAAMC,WAAW,MAAMC,gBAAMC,IAAN,CACnBX,QAAQC,GAAR,CAAYW,mBAAZ,GAAkC,SADf,EAEnB,EAAE,QAAQ,QAAV,EAFmB,EAGnB;AACIC,qBAAS;AACL,4BAAYhB,YADP;AAELiB,+BAAe,WAAWhB;AAFrB;AADb,SAHmB,CAAvB;AAUA,eAAOW,SAASM,IAAT,CAAcC,KAArB;AACH,KAZD,CAYE,OAAOC,GAAP,EAAY;AACV,cAAMA,GAAN;AACH;AACJ,CAhBM;;AAkBP;AACA;AACO,MAAMV,kBAAK;AACdC;AADc,CAAX","file":"aum.js","sourcesContent":["import axios from 'axios'\nimport { v1 as uuid } from 'uuid'\n\nlet AUM_JWT\n\nexport const getTraceId = () => {\n    return `IDS-ODM:${uuid()}`\n}\n\nexport const base64Encode = () => {\n    return new Buffer(`${process.env.IRIS_AUM_APP_KEY}:${process.env.IRIS_AUM_APP_SECRET}`).toString('base64')\n}\n\n\nexport const getAuthorizationHeader = async (poisonCache = false) => {\n    if (poisonCache || !AUM_JWT)\n        AUM_JWT = await __.getAumJwt()\n\n    return `Bearer ${AUM_JWT}`\n}\n\nexport const getAumJwt = async () => {\n    try {\n        const response = await axios.post(\n            process.env.IRIS_AUM_SERVER_URL + '/login/',\n            { \"Type\": \"Server\" },\n            {\n                headers: {\n                    \"trace-id\": getTraceId(),\n                    Authorization: 'Basic ' + base64Encode()\n                }\n            }\n        )\n        return response.data.Token\n    } catch (err) {\n        throw err;\n    }\n}\n\n// this is a hack to enable jest mocks see \n// https://luetkemj.github.io/170421/mocking-modules-in-jest/\nexport const __ = {\n    getAumJwt\n}"]}