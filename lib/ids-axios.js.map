{"version":3,"sources":["../src/ids-axios.js"],"names":["CLASSES","QUERY","requestInterceptor","config","headers","Authorization","url","path","join","process","env","IRIS_IDS_USERID","responseErrorInterceptor","err","response","status","__isRetryRequest","orgRes","Promise","reject","responseSuccessInterceptor","results","getPath","params","length","transformResults","undefined","data","sanitize","payload","objectId","createdAt","updatedAt","http","axios","create","baseURL","IRIS_IDS_SERVER_URL","__","interceptors","request","use","collectionName","post","then","update","id","put","createOrUpdate","q","query","object","count","get","all","destroy","delete"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,MAAMA,UAAU,SAAhB;AACA,MAAMC,QAAQ,OAAd;;AAEO,MAAMC,kDAAqB,MAAMC,MAAN,IAAgB;AAC9CA,WAAOC,OAAP,CAAeC,aAAf,GAA+B,MAAM,kCAArC;AACAF,WAAOC,OAAP,CAAe,UAAf,IAA6B,sBAA7B;AACAD,WAAOG,GAAP,GAAaC,eAAKC,IAAL,CAAUL,OAAOG,GAAjB,EAAsB,QAAtB,EAAgCG,QAAQC,GAAR,CAAYC,eAA5C,CAAb;AACA,WAAOR,MAAP;AACH,CALM;;AAOP;AACO,MAAMS,8DAA2B,MAAOC,GAAP,IAAe;AACnD;AACA,QAAIA,IAAIC,QAAJ,IAAgBD,IAAIC,QAAJ,CAAaC,MAA7B,IACAF,IAAIC,QAAJ,CAAaC,MAAb,KAAwB,GADxB,IAC+B,CAACF,IAAIV,MAAJ,CAAWa,gBAD/C,EACiE;AAC7D;AACA,cAAMC,sBAAcJ,IAAIV,MAAlB,CAAN;AACAc,eAAOD,gBAAP,GAA0B,IAA1B;AACAC,eAAOb,OAAP,CAAeC,aAAf,GAA+B,MAAM,iCAAuB,IAAvB,CAArC;AACA;AACA,eAAO,qBAAMY,MAAN,CAAP;AAEH,KATD,MASO;AACH;AACA,eAAOC,QAAQC,MAAR,CAAeN,GAAf,CAAP;AACH;AACJ,CAfM;;AAiBA,MAAMO,kEAA6BC,WAAWA,OAA9C;;AAEP;AACA;AACA;;AAEO,MAAMC,4BAAU,CAAC,GAAGC,MAAJ,KAAe;AAClC,WAAQA,OAAOC,MAAP,GAAgB,CAAjB,GAAsB,MAAMD,OAAOf,IAAP,CAAY,GAAZ,CAA5B,GAA+C,EAAtD;AACH,CAFM;;AAIA,MAAMiB,8CAAmBJ,WAAW;AACvC;AACA;AACA,QAAIA,QAAQN,MAAR,KAAmB,GAAvB,EACI,OAAOW,SAAP;AACJ;AACA,WAAOL,QAAQM,IAAf;AACH,CAPM;;AASA,MAAMC,8BAAYD,IAAD,IAAU;AAC9B,UAAME,uBAAeF,IAAf,CAAN;AACA,WAAOE,QAAQC,QAAf;AACA,WAAOD,QAAQE,SAAf;AACA,WAAOF,QAAQG,SAAf;AACA,WAAOH,OAAP;AACH,CANM;;AAQA,MAAMI,sBAAOC,gBAAMC,MAAN,CAAa,EAAEC,SAAS3B,QAAQC,GAAR,CAAY2B,mBAAvB,EAAb,CAAb;;AAEP;AACA;AACO,MAAMC,kBAAK;AACdL,QADc;AAEd/B,sBAFc;AAGdU,4BAHc;AAIdQ,8BAJc;AAKdK,oBALc;AAMdG,YANc;AAOdN;;AAGJ;AACA;AAXkB,CAAX,CAYPW,KAAKM,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8BH,GAAGpC,kBAAjC;AACA+B,KAAKM,YAAL,CAAkBzB,QAAlB,CAA2B2B,GAA3B,CAA+BH,GAAGlB,0BAAlC,EAA8DkB,GAAG1B,wBAAjE;;AAEA;AACA;AACA;;AAEO,MAAMuB,0BAAS,OAAOO,cAAP,EAAuBf,IAAvB,KAAgC;AAClD,WAAO,MAAMW,GAAGL,IAAH,CAAQU,IAAR,CAAaL,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,CAAb,EAAkDJ,GAAGV,QAAH,CAAYD,IAAZ,CAAlD,EACRiB,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM;;AAKA,MAAMoB,0BAAS,OAAOH,cAAP,EAAuBI,EAAvB,EAA2BnB,IAA3B,KAAoC;AACtD,WAAO,MAAMW,GAAGL,IAAH,CAAQc,GAAR,CAAYT,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,EAAoCI,EAApC,CAAZ,EAAqDR,GAAGV,QAAH,CAAYD,IAAZ,CAArD,EACRiB,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM;;AAKA,MAAMuB,0CAAiB,OAAON,cAAP,EAAuBO,CAAvB,EAA0BtB,IAA1B,KAAmC;AAC7D,WAAO,MAAMW,GAAGL,IAAH,CAAQc,GAAR,CAAYT,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,CAAZ,EACT,EAAEQ,OAAOD,CAAT,EAAYE,QAAQb,GAAGV,QAAH,CAAYD,IAAZ,CAApB,EADS,EAERiB,IAFQ,CAEHN,GAAGb,gBAFA,CAAb;AAGH,CAJM;;AAMA,MAAM2B,wBAAQ,MAAOV,cAAP,IAA0B;AAC3C,WAAO,MAAMJ,GAAGL,IAAH,CAAQoB,GAAR,CAAYf,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,EAAoC,OAApC,CAAZ,EACRE,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM;;AAKA,MAAM4B,oBAAM,OAAOX,cAAP,EAAuBI,EAAvB,KAA8B;AAC7C,WAAO,MAAMR,GAAGL,IAAH,CAAQoB,GAAR,CAAYf,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,EAAoCI,EAApC,CAAZ,EACRF,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM;;AAKA,MAAM6B,oBAAM,MAAOZ,cAAP,IAA0B;AACzC,WAAO,MAAMJ,GAAGL,IAAH,CAAQoB,GAAR,CAAYf,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,CAAZ,EACRE,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM;;AAKA,MAAMyB,wBAAQ,OAAOR,cAAP,EAAuBO,CAAvB,KAA6B;AAC9C,WAAO,MAAMX,GAAGL,IAAH,CAAQU,IAAR,CAAaL,GAAGhB,OAAH,CAAWrB,KAAX,EAAkByC,cAAlB,CAAb,EAAgD,EAAEQ,OAAOD,CAAT,EAAhD,EACRL,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM;;AAKA,MAAM8B,4BAAU,OAAOb,cAAP,EAAuBI,EAAvB,KAA8B;AACjD,WAAO,MAAMR,GAAGL,IAAH,CAAQuB,MAAR,CAAelB,GAAGhB,OAAH,CAAWtB,OAAX,EAAoB0C,cAApB,EAAoCI,EAApC,CAAf,EACRF,IADQ,CACHN,GAAGb,gBADA,CAAb;AAEH,CAHM","file":"ids-axios.js","sourcesContent":["import axios from 'axios'\nimport path from 'path'\nimport { getAuthorizationHeader, getTraceId } from './aum'\n\nconst CLASSES = 'classes'\nconst QUERY = 'query'\n\nexport const requestInterceptor = async config => {\n    config.headers.Authorization = await getAuthorizationHeader()\n    config.headers['trace-id'] = getTraceId();\n    config.url = path.join(config.url, 'userid', process.env.IRIS_IDS_USERID)\n    return config;\n}\n\n// setup our 401 error handler\nexport const responseErrorInterceptor = async (err) => {\n    // check to see if 401 from iris\n    if (err.response && err.response.status &&\n        err.response.status === 401 && !err.config.__isRetryRequest) {\n        // save off the original request\n        const orgRes = { ...err.config }\n        orgRes.__isRetryRequest = true;\n        orgRes.headers.Authorization = await getAuthorizationHeader(true)\n        // replay the last request\n        return axios(orgRes);\n\n    } else {\n        // we pass the error back to the calling party\n        return Promise.reject(err);\n    }\n}\n\nexport const responseSuccessInterceptor = results => results\n\n//\n// internal helpers\n// \n\nexport const getPath = (...params) => {\n    return (params.length > 0) ? '/' + params.join('/') : ''\n}\n\nexport const transformResults = results => {\n    // if ids doesn't find anything\n    // it returns a 204\n    if (results.status === 204)\n        return undefined\n    // return data\n    return results.data\n}\n\nexport const sanitize = (data) => {\n    const payload = { ...data }\n    delete payload.objectId\n    delete payload.createdAt\n    delete payload.updatedAt\n    return payload\n}\n\nexport const http = axios.create({ baseURL: process.env.IRIS_IDS_SERVER_URL })\n\n// this is a hack to enable jest mocks see \n// https://luetkemj.github.io/170421/mocking-modules-in-jest/\nexport const __ = {\n    http,\n    requestInterceptor,\n    responseErrorInterceptor,\n    responseSuccessInterceptor,\n    transformResults,\n    sanitize,\n    getPath\n}\n\n// we defined http 1st then exported\n// so we have a place holder\nhttp.interceptors.request.use(__.requestInterceptor)\nhttp.interceptors.response.use(__.responseSuccessInterceptor, __.responseErrorInterceptor)\n\n//\n// high level api\n//\n\nexport const create = async (collectionName, data) => {\n    return await __.http.post(__.getPath(CLASSES, collectionName), __.sanitize(data))\n        .then(__.transformResults)\n}\n\nexport const update = async (collectionName, id, data) => {\n    return await __.http.put(__.getPath(CLASSES, collectionName, id), __.sanitize(data))\n        .then(__.transformResults)\n}\n\nexport const createOrUpdate = async (collectionName, q, data) => {\n    return await __.http.put(__.getPath(CLASSES, collectionName),\n        { query: q, object: __.sanitize(data) })\n        .then(__.transformResults)\n}\n\nexport const count = async (collectionName) => {\n    return await __.http.get(__.getPath(CLASSES, collectionName, 'count'))\n        .then(__.transformResults)\n}\n\nexport const get = async (collectionName, id) => {\n    return await __.http.get(__.getPath(CLASSES, collectionName, id))\n        .then(__.transformResults)\n}\n\nexport const all = async (collectionName) => {\n    return await __.http.get(__.getPath(CLASSES, collectionName))\n        .then(__.transformResults)\n}\n\nexport const query = async (collectionName, q) => {\n    return await __.http.post(__.getPath(QUERY, collectionName), { query: q })\n        .then(__.transformResults)\n}\n\nexport const destroy = async (collectionName, id) => {\n    return await __.http.delete(__.getPath(CLASSES, collectionName, id))\n        .then(__.transformResults)\n}"]}